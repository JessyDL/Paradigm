language: cpp
compiler: clang
sudo: required
os: linux

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-6.0
    packages:
      - clang-6.0
      
env:
  global:
    - VK_VERSION="1.1.82.1"
    - WEBHOOK_URL="https://discordapp.com/api/webhooks/509389651321290762/XiAI5ESdNAEEsV1lE60Hq3Cu8nRbFxmpgjc-k0vjeird7bOaG3F3S1A8PTWtCxNAIuRo"

before_install:
  # Install a supported cmake version (>= 3.11)
  - mkdir $HOME/usr
  - export PATH="$HOME/usr/bin:$PATH"
  - wget -O cmake.sh https://cmake.org/files/v3.13/cmake-3.13.0-rc2-Linux-x86_64.sh
  - chmod +x cmake.sh
  - ./cmake.sh --prefix=$HOME/usr --exclude-subdir --skip-license
  
  # Install Vulkan SDK
  - sudo apt-get -qq update
  - sudo apt-get install -y libassimp-dev libglm-dev graphviz libxcb-dri3-0 libxcb-present0 libpciaccess0 cmake libpng-dev libxcb-dri3-dev libx11-dev libx11-xcb-dev libmirclient-dev libwayland-dev libxrandr-dev
  - cd ~
  - git clone https://github.com/KhronosGroup/Vulkan-Headers.git Vulkan-Headers
  - cd Vulkan-Headers
  - git checkout c4e056d365472174471a243dfefbfe66a03564af
  - cd ~
  - git clone https://github.com/KhronosGroup/Vulkan-Hpp.git Vulkan-Hpp
  - cd Vulkan-Hpp
  - git checkout 7e701c79d6998260712dc6578732d534871f0f8a
  - cd ~
  - export VULKAN_ROOT_DIR="$TRAVIS_BUILD_DIR/../VulkanSDK"
  - mkdir -p "${VULKAN_ROOT_DIR}/${VK_VERSION}/x86_64/include/vulkan/"
  - mkdir -p "${VULKAN_ROOT_DIR}/${VK_VERSION}/Include/vulkan/"
  - cp -r Vulkan-Headers/include/vulkan/. "${VULKAN_ROOT_DIR}/${VK_VERSION}/Include/vulkan/"
  - cp -r Vulkan-Hpp/vulkan/. "${VULKAN_ROOT_DIR}/${VK_VERSION}/Include/vulkan/"
  - cp -r Vulkan-Headers/include/vulkan/. "${VULKAN_ROOT_DIR}/${VK_VERSION}/x86_64/include/vulkan/"
  - cp -r Vulkan-Hpp/vulkan/. "${VULKAN_ROOT_DIR}/${VK_VERSION}/x86_64/include/vulkan/"
  - export VULKAN_SDK="${VULKAN_ROOT_DIR}/${VK_VERSION}/x86_64"
  - cd "${VULKAN_ROOT_DIR}"
  - echo $(ls) 
  - cd ${VK_VERSION} 
  - echo $(ls) 
  - cd Include/vulkan 
  - echo $(ls)
  
  # Install libc++
  - cd $TRAVIS_BUILD_DIR/../
  - git clone --depth=1 https://github.com/llvm-mirror/llvm.git llvm-source
  - git clone --depth=1 https://github.com/llvm-mirror/libcxx.git llvm-source/projects/libcxx
  - git clone --depth=1 https://github.com/llvm-mirror/libcxxabi.git llvm-source/projects/libcxxabi
  
  - mkdir llvm-build && cd llvm-build
  - cmake -DCMAKE_C_COMPILER=${C_COMPILER} -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr -DLIBCXX_ABI_UNSTABLE=ON -DLLVM_USE_SANITIZER=${LIBCXX_SANITIZER} -DLLVM_BUILD_32_BITS=OFF ../llvm-source
  - make cxx -j2
  - sudo make install-cxxabi install-cxx
  
  # Install Ninja
  - cd $TRAVIS_BUILD_DIR/../
  - mkdir $TRAVIS_BUILD_DIR/../tmp
  - curl -L https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip -o $TRAVIS_BUILD_DIR/../tmp/ninja-linux.zip
  - unzip $TRAVIS_BUILD_DIR/../tmp/ninja-linux.zip -d $TRAVIS_BUILD_DIR/../ninja
  - export PATH=$PATH:$TRAVIS_BUILD_DIR/../ninja
  
  # Misc
  - export CXX="clang++-6.0" CC="clang-6.0"
  - eval "${MATRIX_EVAL}"
  - cd $TRAVIS_BUILD_DIR
  - eval vk_home_dir=${VULKAN_ROOT_DIR}
  - echo $vk_home_dir # prints home path
  

script:
  - echo ${VK_VERSION}
  - bash build.sh -VULKAN_VERSION ${VK_VERSION} -COMPILER CLang -G Make -VULKAN_ROOT $TRAVIS_BUILD_DIR/../VulkanSDK -cmake_params "-DPARADIGM_CORE_EXECUTABLE=true"
  - cd $TRAVIS_BUILD_DIR/project_files/make/x64/
  - make
  
after_success:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh success $WEBHOOK_URL
after_failure:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure $WEBHOOK_URL
  
  